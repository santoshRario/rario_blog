name: Create New Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout repository
      uses: actions/checkout@v3
      
    - name: Fetch entire Git history (including tags)
      run: git fetch --prune --unshallow --tags
      shell: bash

    - name: Get version
      id: get-version
      uses: beaconbrigade/package-json-version@v0.3
      with:
        path: ./
        
    - name: Collect issue numbers since last release/tag
      run: |
        export LC_ALL=en_US.utf8
        git log $(git describe --tags --abbrev=0)..HEAD --oneline | \
          grep -oE "RAR-[[:digit:]]{1,}" | sort | uniq | \
          sed 's/^\|$/"/g' | paste -sd , | awk '{print "RELATED_JIRA_ISSUES="$0}' >> $GITHUB_ENV
      shell: bash

    - name: Create json and invoke webhook
      run: |
        $json = ConvertTo-Json @{issues = @(${{ env.RELATED_JIRA_ISSUES }}); data = @{version = "${{ steps.get-version.outputs.version }}"; projectName = "RAR"}}
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        Invoke-RestMethod ${{ secrets.JIRA_AUTOMATION_WEBHOOK }} -Method Post -Body $json -ContentType "application/json"
      shell: pwsh
